---
# tasks file for nginx-site-setup
- name: "Set permissions for the web root - {{ nginx_site_setup_web_home }}"
  file: 
    path: "{{ nginx_site_setup_web_home }}"
    state: directory 
    owner: root 
    group: root 
    mode: 0755

- name: "Create directories for each site"
  file: 
    path: "{{ nginx_site_setup_web_home }}/{{ item.name }}" 
    state: directory 
    owner: root 
    group: root
  with_items: '{{ nginx_site_setup_sites_to_set_up }}'

- name: "Copy nginx configuration (with HTTPS enabled)"
  template: 
    src: nginx_app_config_https 
    dest: /etc/nginx/conf.d/{{ item.name }}.conf
    owner: root 
    group: root
  with_items: '{{ nginx_site_setup_sites_to_set_up }}'
  when: item.https

- name: "Copy nginx configuration (without HTTPS enabled)"
  template: 
    src: nginx_app_config 
    dest: /etc/nginx/conf.d/{{ item.name }}.conf
    owner: root 
    group: root
  with_items: '{{ nginx_site_setup_sites_to_set_up }}'
  when: not item.https

- name: "Look for local custom_config"
  local_action: stat path=roles/nginx/templates/custom_config/{{ item.name }}
  register: has_custom_config
  with_items: '{{ nginx_site_setup_sites_to_set_up }}'

- name: "Copy nginx custom config to remote"
  template: 
    src: roles/nginx/templates/custom_config/{{ item.item.name }} 
    dest: /etc/nginx/conf.d/{{ item.item.name }}.conf
    owner: root 
    group: root
  with_items: '{{ has_custom_config.results }}'
  when: item.stat.exists

- name: "Setup web on a shared webserver"
  block:

    - name: "Set the correct ownership permissions on the user website directory"
      file: 
        path: "{{ nginx_site_setup_web_home }}/{{ item.name }}"
        state: directory 
        owner: "{{ item.name }}" 
        group: "{{ nginx_site_setup_web_group }}" 
        mode: g+s
        recurse: yes
      with_items: '{{ nginx_site_setup_sites_to_set_up }}'

    - name: "Create www directory and set {{ nginx_site_setup_web_group }} as default group for all new directories"
      file: 
        path: "{{ nginx_site_setup_web_home }}/{{ item.name }}/{{ item.nginx_site_setup_site_subfolder_used_to_serve_files }}"
        state: directory 
        owner: "{{ item.name }}" 
        group: "{{ nginx_site_setup_web_group }}" 
        mode: g+s
        recurse: yes
      with_items: '{{ nginx_site_setup_sites_to_set_up }}'

  when: nginx_site_setup_used_on_shared_webserver

- name: "Setup web directory on VPS or non-shared webserver"
  block:

    - name: "Set the correct ownership permissions on the user website directory"
      file: 
        path: "{{ nginx_site_setup_web_home }}/{{ item.name }}"
        state: directory 
        owner: "{{ nginx_site_setup_web_user }}"
        group: "{{ nginx_site_setup_web_group }}" 
        mode: g+s
        recurse: yes
      with_items: '{{ nginx_site_setup_sites_to_set_up }}'

    - name: "Create www directory and set {{ nginx_site_setup_web_group }} as default group for all new directories"
      file: 
        path: "{{ nginx_site_setup_web_home }}/{{ item.name }}/{{ item.nginx_site_setup_site_subfolder_used_to_serve_files }}"
        state: directory 
        owner: "{{ nginx_site_setup_web_user }}"
        group: "{{ nginx_site_setup_web_group }}" 
        mode: g+s
        recurse: yes
      with_items: '{{ nginx_site_setup_sites_to_set_up }}'
      
  when: not nginx_site_setup_used_on_shared_webserver

#- name: "Ensure directories are 0755"
#  command: find {{ nginx_site_setup_web_home }}/{{ item.name }}/{{ item.nginx_site_setup_site_subfolder_used_to_serve_files }}/ -type d -exec chmod -c 0755 {} \;
#  register: chmod_result
#  changed_when: "chmod_result.stdout != \"\""
#  with_items: '{{ nginx_site_setup_sites_to_set_up }}'
#
#- name: "Ensure files are 0644"
#  command: find {{ nginx_site_setup_web_home }}/{{ item.name }}/{{ item.nginx_site_setup_site_subfolder_used_to_serve_files }}/ -type f -exec chmod -c 0644 {} \;
#  register: chmod_result
#  changed_when: "chmod_result.stdout != \"\""
#  with_items: '{{ nginx_site_setup_sites_to_set_up }}'

- name: "Ensure NginX service is up"
  service:
    name: nginx 
    state: started 
    enabled: yes  

- name: "Restart NginX to make sure new configuration is active"
  service:
    name: nginx 
    state: restarted 
    enabled: yes  
  