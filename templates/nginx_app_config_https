
server {
  listen               80;
  listen               443 ssl;
  server_name          www.{{ item.url }};
  ssl_certificate /etc/letsencrypt/live/{{ item.url }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ item.url }}/privkey.pem;

  return 301 $scheme://{{ item.url }}$request_uri;
}

server {
  listen 80;

  server_name {{ item.nginx_server_name }};

  location / {
    return 301 https://$server_name$request_uri;
  }
}

server {
  listen 443;

  server_name {{ item.nginx_server_name }};

  root /var/www/{{ item.name }}/{{ nginx_site_setup_site_subfolder_used_to_serve_files }};
  try_files /wp-content/cache/supercache/$http_host/$cache_uri/index.html $uri $uri/ /index.php?$args;
  index index.php index.html;

  ssl on;
  ssl_certificate /etc/letsencrypt/live/{{ item.url }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ item.url }}/privkey.pem;
  ssl_dhparam /etc/nginx/dhparam.pem;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  ssl_protocols TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
  ssl_prefer_server_ciphers on;

  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  add_header Strict-Transport-Security max-age=15768000;

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ item.url }}/chain.pem;

  access_log /var/log/nginx/{{ item.name }}.access.log;
  error_log /var/log/nginx/{{ item.name }}.error.log;

  client_max_body_size {{ nginx_site_setup_nginx_server_client_max_body_size }};

  set $cache_uri $request_uri;

  # POST requests and URLs with a query string should always go to PHP
  if ($request_method = POST) {
    set $cache_uri 'null cache';
  }

  if ($query_string != "") {
    set $cache_uri 'null cache';
  }

  # Don't cache URIs containing the following segments
  if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|tracking|trackingcode|ajax|status|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
    set $cache_uri 'null cache';
  }

  # Don't use the cache for logged-in users or recent commenters
  if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_logged_in") {
      set $cache_uri 'null cache';
  }

  location / {
    try_files /wp-content/cache/supercache/$http_host/$cache_uri/index.html $uri $uri/ /index.php?q=$uri&$args;
  }

  error_page 404 /404.html;
  error_page 500 502 503 504 /50x.html;

  location = /50x.html {
    root /var/www/{{ item.name }}/{{ nginx_site_setup_site_subfolder_used_to_serve_files }};
  }

  location ~ \.php$ {
    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
  }

  location ~ /\. {
    deny all;
  }

  # Cache static files for as long as possible
  location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
    expires max;
    log_not_found off;
    access_log off;
  }
}
